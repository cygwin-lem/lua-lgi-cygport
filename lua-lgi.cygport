NAME="lua-lgi"
VERSION=0.9.2p62
RELEASE=10
CATEGORY="Lua"
SUMMARY="GObject Introspection for Lua"
DESCRIPTION="\
LGI is gobject-introspection based dynamic Lua binding to GObject based
libraries. It allows using GObject-based libraries directly from Lua.
"
HOMEPAGE="https://github.com/pavouk/lgi/"

GIT_REPO="https://github.com/pavouk/lgi"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [0.9.2p62]=2021-03-10T07:36:58+01:00/a3d46f4f3cb1a3c19c61f46b856ee6683a2d57db
  [0.9.2]=2017-10-09T20:55:55+02:00/0.9.2
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%%/*}"
REV_DATE_SHORT="${REV_DATE%%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}/${GIT_BASENAME}-${VERSION}.tar.gz"
SRC_DIR="${GIT_BASENAME}-${REV_HASH#v}"

################################
LUA_VERSIONS="5.3:5.4"
LUA_PKG_NAME="lgi"
source lua.experiment

################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  lua53-devel\
  lua54-devel\
\
  gobject-introspection\
  libgirepository1.0-devel\
  libglib2.0-devel\
  libffi-devel\
"
# TEST_REQUIRES="\
# "

################################
ABI=0


################################
_CYGPORT_RESTRICT_postinst_doc_=1

set_packages_lua_versions ${LUA_VERSIONS} ${LUA_PKG_NAME}
__set_pkg_property lua53-${LUA_PKG_NAME} OBSOLETES "lua-${LUA_PKG_NAME}"

################################
__set_LUA_MAKE_ARGS() {
  LUA_MAKE_ARGS=(
    DESTDIR=${D} \
    PREFIX=/usr \
    LUA=${LUA} \
    LUA_VERSION="${LUA_VERSION}" \
    LUA_SHAREDIR="${LUA_SCRIPTDIR}" \
    LUA_LIBDIR="${LUA_LIBDIR}" \
    CFLAGS="${CFLAGS}" \
    LUA_CFLAGS="${LUA_CFLAGS}" \
    LUA_LIB="${LUA_LIBS}" \
    CORE=corelgilua51.so \
  )
}

################################
src_compile_lua() {
  mkdir -p ${B}/${LUA_VERSION}
  cd  ${B}/${LUA_VERSION}
  __set_LUA_MAKE_ARGS

  lndirs ${S} .
  cygmake "${LUA_MAKE_ARGS[@]}"
}

################################
src_install_lua() {
  cd ${B}/${LUA_VERSION}
  __set_LUA_MAKE_ARGS

  cygmake "${LUA_MAKE_ARGS[@]}" install

  dodoc LICENSE* README* docs/
}

################################
src_test_lua() {
  cd ${B}/${LUA_VERSION}
  __set_LUA_MAKE_ARGS

  local TEST_LUA_PATH=$(lua_path_test ${LUA_VERSION})
  local TEST_LUA_CPATH=$(lua_cpath_test ${LUA_VERSION})

  printf '%s\n' "LUA_PATH=${TEST_LUA_PATH}"
  printf '%s\n' "LUA_CPATH=${TEST_LUA_CPATH}"

  LUA_PATH="${TEST_LUA_PATH}" \
  LUA_CPATH="${TEST_LUA_CPATH}" \
  cygmake "${LUA_MAKE_ARGS[@]}" check
}

################################
